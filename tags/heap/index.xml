<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>heap on Cebola Security</title>
    <link>https://mdanilor.github.io/tags/heap/</link>
    <description>Recent content in heap on Cebola Security</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 29 Aug 2022 13:08:50 -0300</lastBuildDate>
    
	<atom:link href="https://mdanilor.github.io/tags/heap/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Writeup] My take on d3guard, a UEFI CTF</title>
      <link>https://mdanilor.github.io/posts/d3guard/</link>
      <pubDate>Mon, 29 Aug 2022 13:08:50 -0300</pubDate>
      
      <guid>https://mdanilor.github.io/posts/d3guard/</guid>
      <description>About the challenge d3ctf was a Chinese CTF which occurred a few months ago. I did not participate, but I was looking for CTFs on UEFI firmware exploitation and I found d3guard: a challenge from this CTF which was exactly what I was looking for.
I would like to start stating that I found this challenge to be extremely difficult. In fact, it was one of the hardest I have done so far.</description>
    </item>
    
    <item>
      <title>Understanding binary protections (and how to bypass) with a dumb example</title>
      <link>https://mdanilor.github.io/posts/memory-protections/</link>
      <pubDate>Mon, 01 Feb 2021 17:30:00 -0300</pubDate>
      
      <guid>https://mdanilor.github.io/posts/memory-protections/</guid>
      <description>Hi! Long time no see, huh? I must apologize for my lousy post schedule. In spite of covid-19 outbreak forcing us to stay home, it appears that I&amp;rsquo;ve never had less time to spare in my life. Well, let&amp;rsquo;s get to it.
Memory corruption issues often lead to pretty serious vulnerabilities. It is not uncommon for a stack or heap overflow, use-after-free, double free and others to lead to code execution.</description>
    </item>
    
  </channel>
</rss>